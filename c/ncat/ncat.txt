请仔细阅读下面的项目任务描述，完成项目任务描述中的任务。你可以选择直接在线开发，也可以下载完整项目文件在本地完成开发后通过“创建版本”功能上传你完成开发后的项目。点击下载项目文件
我们已经见过了gcc,make,rm这些命令，它们功能强大，会根据参数的不同产生不同的执行效果。我们之前写的大多数程序没有实现这种特性。

在常见的操作系统中，我们日常使用的绝大部分应用程序其实都会对命令行参数进行识别，比如你现在浏览计蒜客所使用的软件（有可能是浏览器或者客户端等等），也是会识别命令行参数的（如果感兴趣可以在学习操作系统等课程之后尝试），参数的不同可以让它产生不同的运行效果。

在这节中我们来实现一个简单的程序，它可以根据参数的不同执行有一定区别的功能。

完整目标
实现一个我们起名为ncat的命令，其作用是把输入的内容每行前加上行号输出。它可能有 22 个、 33 个或 44 个命令行参数，第一个命令行参数是它本身的名字，在这节里我们可以忽略，第二个参数一定是-d（表示 decimal）或者-r（表示 roman）中的一个，若为-d则行号用阿拉伯数字表示，若为-r则行号用罗马数字表示，若存在第三个参数则其表示输入文件的路径，若不存在则表示输入来自标准输入，若存在第四个参数则其表示输出文件的路径，若不存在则表示输出到标准输出。注意：行号与输入文本的回显之间用\t隔开。

给出的结构
Makefile可以运行make进行自测。
src编写和编译代码的目录，本节要求的所有任务都在这里完成。本节中，在终端里我们可以输入pushd src并按回车进入这个目录，之后可以输入popd并按回车退回进入之前的目录。
Makefile用于编译ncat，要求符合相关规范。
ncat.c这里需要自己实现ncat命令主函数。
roman.c提供函数char* to_roman_numeral(char* dst, int src)用于将数字src转换为罗马数字字符串存于dst所指向的空间中，并返回dst的值。
roman.h这是roman.c对应的头文件。
srctestbyscript运行自测用的目录，不必修改其中内容。
d输入样例所对应的行号为阿拉伯数字时的输出样例
in输入样例
r输入样例所对应的行号为罗马数字时的输出样例
usertest.sh与自测相关的文件，不必阅读和修改其中内容。
第一部分
在src/ncat.c中实现ncat命令的主函数，使之符合上述对ncat命令的要求，实现过程中允许使用和包含标准库函数及其头文件以及我们给出的to_roman_numeral函数和roman.h头文件。

第二部分
编写src/Makefile要求在src目录下既可以通过make ncat编译和连接产生ncat命令，又可以通过make clean清除编译和连接生成的目标代码文件和其它文件，并且若一个文件被修改，不相干的文件不会被重新编译。

注 1：你可以反复提交评分，你的最终分数将以最高一次提交得分为准。

注 2：本项目作业需要你独立完成，使用他人提供的代码进行提交（无论是否为最高分提交）都将被视为违背学术纯洁性的行为。更多信息请参考《学术准则》。